name: CI

on:
  push:
    branches: [ main ]
    tags-ignore: [ '*' ]

env:
  CARGO_TERM_COLOR: always
  GROONGA_VERSION: 12.0.8

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install -y \
            wget \
            tar \
            pkg-config \
            clang-14 \
            build-essential \
            zlib1g zlib1g-dev \
            liblz4-1 \
            liblz4-dev \
            libzstd1 \
            libzstd-dev \
            libmpack0 \
            libmsgpack-dev \
            libzmq5 \
            libzmq3-dev \
            libevent-dev \
            libmecab-dev
    - name: Install Groonga (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd "`mktemp -d`"
        wget https://packages.groonga.org/source/groonga/groonga-${GROONGA_VERSION}.tar.gz
        tar zxf groonga-${GROONGA_VERSION}.tar.gz
        cd groonga-${GROONGA_VERSION}
        ./configure --with-zlib --with-lz4 --with-zstd
        make -j$(grep '^processor' /proc/cpuinfo | wc -l)
        sudo make install
        echo "LD_LIBRARY_PATH=/usr/local/lib" >> $GITHUB_ENV
    - name: Install Groonga (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        curl.exe -f -v -o groonga-${env:GROONGA_VERSION}-x64-vs2022.zip https://packages.groonga.org/windows/groonga/groonga-${env:GROONGA_VERSION}-x64-vs2022.zip
        Expand-Archive -Path groonga-${env:GROONGA_VERSION}-x64-vs2022.zip -DestinationPath groonga-${env:GROONGA_VERSION}
        $groonga_home = Join-Path -Path (Get-Location) -ChildPath groonga-${env:GROONGA_VERSION} | Join-Path -ChildPath groonga-${env:GROONGA_VERSION}-x64-vs2022
        Write-Output "GROONGA_HOME=$groonga_home" >> $env:GITHUB_ENV
        Write-Output "PATH=${env:PATH};$groonga_home\bin" >> $env:GITHUB_ENV
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
